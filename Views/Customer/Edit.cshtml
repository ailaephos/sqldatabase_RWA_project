@model rwa_projekt_katlija_2407.Models.ViewModels.EditCustomerVM

@{
    ViewBag.Title = "Edit";
}

<div style="width: 80vw; height: auto; background-color: #3F3F3F; border: solid 1px #3F3F3F; border-radius: 10px; text-align: center; padding-bottom:15px; " class="container">
    <h1 style="width: 150px; margin-top:-12px;">Customer editing</h1>
    <div class="contbtnh" style="text-align: center; background-color: #FFDF6C; height: auto; margin-bottom: 10px;">     
            <h4 class="addstateheader" style="margin-left:0;">@Html.Partial(partialViewName: "_Customer", model: Model.Customer) edit mode</h4>
        </div>
    <div style="border: 1px solid white; border-radius: 7px; background-color: white; width: 60vw; height: auto; margin: auto; padding-bottom: 2vh; font-size: 20px;">

        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(false, "", new { @class = "text-danger", style = "font-size: 15px; " })

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Customer.IDKupac)

            <div class="container" style="margin-top: 20px;">
                <span>
                    @Html.LabelFor(model => model.Customer.Ime, htmlAttributes: new { @class = "txtadd" })
                </span>
                <span>
                    @Html.EditorFor(model => model.Customer.Ime, new { htmlAttributes = new { @class = "my-textBox" } })
                </span>
                <div class="container" style="margin-top: 20px;">
                    <span>
                        @Html.LabelFor(model => model.Customer.Prezime, htmlAttributes: new { @class = "txtadd" })
                    </span>
                    <span>
                        @Html.EditorFor(model => model.Customer.Prezime, new { htmlAttributes = new { @class = "my-textBox" } })
                    </span>
                </div>
                <div class="container" style="margin-top: 20px;">
                    <span>
                        @Html.LabelFor(model => model.Customer.Email, htmlAttributes: new { @class = "txtadd" })
                    </span>
                    <span>
                        @Html.EditorFor(model => model.Customer.Email, new { htmlAttributes = new { @class = "my-textBox", @style = "width: 350px;" } })
                    </span>
                </div>
                <div class="container" style="margin-top: 20px;">
                    <span>
                        @Html.LabelFor(model => model.Customer.Telefon, htmlAttributes: new { @class = "txtadd" })
                    </span>
                    <span>
                        @Html.EditorFor(model => model.Customer.Telefon, new { htmlAttributes = new { @class = "my-textBox" } })
                    </span>
                </div>
                <div class="container" style="margin-top: 20px;">
                    <span>
                        @Html.LabelFor(model => model.Customer.DrzavaID, htmlAttributes: new { @class = "txtadd" })
                    </span>
                    <span>
                        @Html.DropDownListFor(model => model.Customer.DrzavaID, Model.StatesList)
                    </span>
                </div>
                <div class="container" style="margin-top: 20px;">
                    <span>
                        @Html.LabelFor(model => model.Customer.GradID, htmlAttributes: new { @class = "txtadd" })
                    </span>
                    <span>
                        @Html.DropDownListFor(model => model.Customer.GradID, Model.CitiesList)
                    </span>
                </div>

                <div class="container">
                    <div>
                        <input type="submit" value="Update" class="editImg" style="width: 100px; height: 30px; color:white; margin-top:20px; font-size: 15px;" />
                    </div>
                </div>
            </div>
        }
    </div>
    </div>

      
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")

            <script type="text/javascript">

                var cityUrl = '/FetchCities/';
                var cities = $('#Customer_GradID');
                $('#Customer_DrzavaID').change(function () {
                    -
                    cities.empty();
                    $.getJSON(cityUrl, { ID: $(this).val() }, function (data) {
                        if (!data) {
                            return;
                        }
                        $.each(data, function (index, item) {
                            cities.append($('<option></option>').val(item.Value).text(item.Text));
                        });
                    });
                })

            </script>
        }
